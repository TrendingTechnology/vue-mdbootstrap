/* BsAlert mixins */
@mixin make-outline-alert($name, $color) {
  .alert-outline-#{$name} {
    color: $color;
    border-color: lighten($color, 5%);

    hr {
      border-top-color: lighten($color, 5%);
    }

    .alert-link {
      color: darken($color, 10%);
    }
  }
}

/* BsProgress mixins */
@mixin progress-bar-indeterminate($color) {
  background-color: rgba($color, .24);

  .#{$prefix}-progress-bar-track,
  .#{$prefix}-progress-bar-fill {
    &:after {
      background-color: $color;
    }
  }
}

@mixin progress-bar-determinate($color) {
  background-color: rgba($color, .24);

  .#{$prefix}-progress-bar-fill {
    background-color: $color;
  }
}

@mixin progress-bar-buffer($color) {
  .#{$prefix}-progress-bar-fill {
    background-color: $color;
  }

  .#{$prefix}-progress-bar-track {
    background-color: rgba($color, .38);
  }

  .#{$prefix}-progress-bar-buffer {
    border-color: rgba($color, .38);
  }
}

@mixin make-progress-bar($name, $color) {
  .progress-bar-#{$name} {
    &.#{$prefix}-indeterminate {
      @include progress-bar-indeterminate($color);
    }

    &.#{$prefix}-determinate {
      @include progress-bar-determinate($color);
    }

    &.#{$prefix}-buffer {
      @include progress-bar-buffer($color);
    }
  }
}

@mixin make-progress-spinner($name, $color) {
  .spinner-#{$name} {
    .#{$prefix}-progress-spinner-circle {
      stroke: $color;
    }
  }
}

/* BsGrid mixins */
@mixin grid-rowstate-variant($name, $color) {
  .#{$prefix}-state-#{$name} {
    background-color: rgba($color, .08);
  }
}

/* BsList mixins */
@mixin bslist-variant($name, $color) {
  .#{$prefix}-list-#{$name} {
    background-color: $color;

    .#{$prefix}-divider {
      @if (lightness($color) < 81) {
        background-color: rgba($white-base, .2);
      }
    }

    .#{$prefix}-subheader {
      @if (lightness($color) > 80) {
        color: darken($gray-500, 5%);
      } @else {
        color: rgba($white-base, .8);
      }
    }

    .#{$prefix}-list-tile {
      &:not(.#{$prefix}-disabled) {
        &.#{$prefix}-link:hover {
          background-color: set-hoverable-bgcolor($color);
        }

        .#{$prefix}-list-tile-leading,
        .#{$prefix}-list-tile-action {
          color: set-leading-text-color($color);
        }

        .#{$prefix}-list-tile-title {
          color: set-notification-text-color($color);
        }

        .#{$prefix}-list-tile-subtitle {
          color: set-subtitle-text-color($color);
        }

        .#{$prefix}-checkbox {
          &:not(.#{$prefix}-checked) {
            .#{$prefix}-checkbox-inner {
              @if (lightness($color) < 80) {
                border-color: rgba($white-base, 0.6);
              }
            }
          }
        }

        &.active, &.#{$prefix}-active {
          background-color: set-hoverable-bgcolor($color, .22);

          .#{$prefix}-list-tile-leading {
            color: set-subtitle-text-color($color);
          }

          .#{$prefix}-list-tile-title {
            font-weight: $font-weight-bold;
          }
        }
      }
    }

    .#{$prefix}-list-tile {
      &.#{$prefix}-disabled {
        color: set-disable-text-color($color) !important;

        .#{$prefix}-list-tile-leading,
        .#{$prefix}-list-tile-action {
          color: set-leading-disable-text-color($color);
        }
      }
    }
  }
}

/* BsListNav mixins */
@mixin bslist-nav-variant($name, $color) {
  .#{$prefix}-list-#{$name} {
    > .#{$prefix}-list-nav {
      .#{$prefix}-nav-item {
        > .#{$prefix}-nav-item-inner {
          @if (lightness($color) > 50) {
            color: $gray-900;
          } @else {
            color: rgba($white-base, .8);
          }
        }

        &.#{$prefix}-disabled {
          > .#{$prefix}-nav-item-inner {
            color: set-disable-text-color($color);
          }
        }

        &:hover:not(.#{$prefix}-expanded) {
          @if (lightness($color) > 80) {
            background-color: $default-hover-bgcolor;
          } @else {
            background-color: rgba(lighten($color, 10%), .25);
          }
        }

        @if (lightness($color) < 90) {
          &.#{$prefix}-expanded {
            background-color: set-hoverable-bgcolor($color, 0);
          }
        }

        &.#{$prefix}-active {
          &:not(.#{$prefix}-parent),
          &.#{$prefix}-parent:not(.#{$prefix}-expanded) {
            @if (lightness($color) > 80) {
              background-color: $sidebar-active-bgcolor;
            } @else {
              background-color: rgba(lighten($color, 45%), .1); // lighten($color, 8%);

              > .#{$prefix}-nav-item-inner {
                color: $white;
              }
            }
          }

          @if (lightness($color) < 85) {
            &:not(.#{$prefix}-parent) {
              &:before {
                background: rgba(lighten($color, 85%), .3);
              }
            }
          }
        }
      }
    }
  }
}

/* Transition mixins */
@mixin enter($parent) {
  #{$parent}-enter {
    @content;
  }
}

@mixin enter-to($parent) {
  #{$parent}-enter-to {
    @content;
  }
}

@mixin enter-active($parent) {
  #{$parent}-enter-active {
    @content;
  }
}

@mixin enter-leave-active($parent) {
  #{$parent}-enter-active,
  #{$parent}-leave-active {
    @content;
  }
}

@mixin enter-leaveactive($parent) {
  #{$parent}-enter,
  #{$parent}-leave-active {
    @content;
  }
}

@mixin enter-leaveto($parent) {
  #{$parent}-enter,
  #{$parent}-leave-to {
    @content;
  }
}

@mixin leave-active($parent) {
  #{$parent}-leave-active {
    @content;
  }
}

@mixin leave-to($parent) {
  #{$parent}-leave-to {
    @content;
  }
}

@mixin leave-active-to($parent) {
  #{$parent}-leave,
  #{$parent}-leave-active,
  #{$parent}-leave-to {
    @content;
  }
}

/* Input Placeholder mixins */
@mixin decorate-input-placeholder {
  &::placeholder {
    color: $gray-500;
    font-size: .88rem;
    font-weight: $font-weight-light;
  }

  &::-moz-placeholder {
    color: $gray-500;
    font-size: .88rem;
    font-weight: $font-weight-light;
  }

  &::-webkit-input-placeholder {
    color: $gray-500;
    font-size: .88rem;
    font-weight: $font-weight-light;
  }

  &:-ms-input-placeholder {
    color: $gray-500;
    font-size: .88rem;
    font-weight: $font-weight-light;
  }
}
